authoritative;  
allow unknown-clients;  

{% if pillar.dns -%}
{% for name, cur_net in salt['pillar.get']('dns:networks', {}).items() -%}
{% set net = salt['utils.copy'](salt['pillar.get']('dns:defaults', {})) -%}
{% set _ = net.update(salt['utils.exclude_keys'](cur_net, 'options')) -%}

{% set options = salt['utils.copy'](salt['pillar.get']('dns:defaults:options', {})) -%}
{% set _ = options.update(cur_net.get('options', {})) -%}

shared-network {{ name }} {
        {% if not net['authoritative'] %}not {% endif %}authoritative;
	subnet {{ net['subnet'] }} netmask {{ net['netmask'] }} {
		{% for opt, val in options.items() %}
		{% if salt['utils.is_list'](val) -%}
		option {{ opt }} {{ ', '.join(val) }};
		{% elif salt['utils.is_ip'](val) -%}
		option {{ opt }} {{ val }};
		{% elif salt['utils.is_str'](val) -%}
		option {{ opt }} "{{ val }}";
		{%- endif -%}
		{%- endfor %}

		default-lease-time {{ net['default-lease-time'] }};
		max-lease-time {{ net['max-lease-time'] }};

		{%- if 'hosts' in net -%}
		{%- for hostname, host in net['hosts'].items() %}
		host {{ name }}_{{ hostname }} {
			fixed-address {{ host['ip'] }};
			hardware ethernet {{ host['mac'] }};
		}

		{%- endfor -%}

		{%- endif -%}
		{%- if 'range' in net -%}
		{%- for start, end in salt['utils.pairwise'](net['range']) -%}
		range {{ start }} {{ end }};
		{%- endfor -%}
		{%- endif -%}
	}
}

{% endfor -%}
{% endif -%}

